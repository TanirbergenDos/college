import git
import os
import random

# -----------------------------
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –¥–∞–Ω–Ω—ã–µ
# -----------------------------
EMOJIS = ["üöÄ", "üß†", "üîß", "üî•", "üíª", "‚ú®", "üßë‚Äçüíª", "üîç", "‚ö°"]

def get_random_emoji():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —ç–º–æ–¥–∑–∏ –¥–ª—è –∫–æ–º–º–∏—Ç–∞."""
    return random.choice(EMOJIS)

# -----------------------------
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ TODO
# -----------------------------
def check_for_todo_in_files(repo_path):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ–∞–π–ª—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ TODO."""
    todo_files = []
    for root, _, files in os.walk(repo_path):
        for file in files:
            if file.endswith(".py"):
                file_path = os.path.join(root, file)
                try:
                    with open(file_path, "r", encoding="utf-8") as f:
                        for line_number, line in enumerate(f, start=1):
                            if "TODO" in line:
                                todo_files.append((file_path, line_number, line.strip()))
                except Exception:
                    pass  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —É–¥–∞–µ—Ç—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å
    return todo_files

# -----------------------------
# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è Git-–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
# -----------------------------
def commit_changes_with_emoji(repo_path, commit_message):
    repo = git.Repo(repo_path)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ TODO –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º
    todos = check_for_todo_in_files(repo_path)
    if todos:
        print("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ TODO –≤ –∫–æ–¥–µ:")
        for file_path, line_number, line_text in todos:
            print(f"  {file_path}:{line_number} ‚Üí {line_text}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ TODO –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º!\n")

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    repo.git.add(A=True)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞ —Å —ç–º–æ–¥–∑–∏
    message_with_emoji = f"{commit_message} {get_random_emoji()}"

    # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–º–∏—Ç
    repo.index.commit(message_with_emoji)
    print(f"‚úÖ –ö–æ–º–º–∏—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º: {message_with_emoji}")

    # –ü—É—à–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    origin = repo.remote(name='origin')
    try:
        origin.push()
    except git.GitCommandError:
        current_branch = repo.active_branch.name
        repo.git.push('--set-upstream', 'origin', current_branch)
        print(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ upstream-–≤–µ—Ç–∫–∞ –¥–ª—è {current_branch} –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω push.")

# -----------------------------
# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
# -----------------------------
if __name__ == "__main__":
    repo_path = r"C:\Users\–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\Desktop\2810"  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é
    commit_message = "–î–æ–±–∞–≤–∏–ª –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é"
    commit_changes_with_emoji(repo_path, commit_message)
